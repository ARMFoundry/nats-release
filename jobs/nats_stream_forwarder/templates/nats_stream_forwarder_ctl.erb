#!/bin/bash
set -exu

<%
   def discover_external_ip
     networks = spec.networks.marshal_dump

     _, network = networks.find do |_name, network_spec|
       network_spec.default
     end

     if !network
       _, network = networks.first
     end

     if !network
       raise "Could not determine IP via network spec: #{networks}"
     end

     network.ip
   end
%>

RUN_DIR=/var/vcap/sys/run/nats_stream_forwarder
LOG_DIR=/var/vcap/sys/log/nats_stream_forwarder
JOB_DIR=/var/vcap/jobs/nats_stream_forwarder
BIN_DIR=$JOB_DIR/bin
PIDFILE=$RUN_DIR/nats_stream_forwarder.pid
export BUNDLE_GEMFILE=/var/vcap/packages/nats/nats/Gemfile
export CONFIG_DIR=$JOB_DIR/config

source /var/vcap/packages/nats-common/utils.sh
redirect_logs $LOG_DIR nats_stream_forwarder_ctl

case $1 in
  start)
    PATH=/var/vcap/packages/ruby-2.2.5/bin:$PATH

    pid_guard $PIDFILE "NATS Stream Forwarder"
    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR
    echo $$ > $PIDFILE
    chown vcap:vcap $PIDFILE

    <% my_ip = discover_external_ip %>
    <%
      nats_ips = nil
      if_p("nats.machines") { |ips| nats_ips = ips }
      unless nats_ips
        nats_ips = link("nats").instances.map(&:address)
      end

      nats_user = nil
      if_p("nats.user") { |user| nats_user = user }
      unless nats_user
        nats_user = link("nats").p("nats.user")
      end

      nats_password = nil
      if_p("nats.password") { |password| nats_password = password }
      unless nats_password
        nats_password = link("nats").p("nats.password")
      end

      nats_port = nil
      if_p("nats.port") { |port| nats_port = port }
      unless nats_port
        nats_port = link("nats").p("nats.port")
      end
    %>
    <% connect_ip = nats_ips.include?(my_ip) ? my_ip : nats_ips.sample %>

    exec chpst -u vcap:vcap bundle exec $BIN_DIR/nats_stream_forwarder.rb 'nats://<%= nats_user %>:<%= nats_password %>@<%= connect_ip %>:<%= nats_port %>'

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: nats_stream_forwarder_ctl {start|stop}"

    ;;

esac
